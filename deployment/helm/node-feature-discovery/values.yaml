image:
  # -- NFD image repository
  repository: gcr.io/k8s-staging-nfd/node-feature-discovery
  # @schema enum: [Always, IfNotPresent, Never]
  # -- Image pull policy
  pullPolicy: Always
  # @schema type: [string, null]
  # -- NFD image tag. If not specified Chart.AppVersion will be used.
  tag:
# @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets
# -- Image pull secrets. [More info](https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod).
imagePullSecrets: []

# -- Override the name of the chart
nameOverride: ""
# -- Override a default fully qualified app name
fullnameOverride: ""
# -- Override the namespace to install the chart into. By default, the namespace is determined by Helm.
namespaceOverride: ""

# @schema patternProperties: {"^[a-zA-Z]$": {type: string}}
# -- [Feature gates](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/feature-gates) to enable/disable specific features.
# @section -- General
featureGates: {}

# -- The name of the PriorityClass to be used for the NFD pods.
priorityClassName: ""

# -- Enable/disable the Helm post-delete hook.
postDeleteCleanup: true

#
# NFD-Master configuration
master:
  # -- Specifies whether nfd-master should be deployed
  enable: true
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/args
  # -- Additional [command line arguments](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/master-commandline-reference) to pass to nfd-master.
  extraArgs: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/env
  # -- Additional environment variables to set in the nfd-master container.
  extraEnvs: []
  # -- Run the container in the host's network namespace.
  hostNetwork: false
  # @enum: [Default, ClusterFirst, ClusterFirstWithHostNet, None]
  # -- NFD master pod [dnsPolicy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy).
  dnsPolicy: ClusterFirstWithHostNet
  # -- NFD master [configuration](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/master-configuration-reference).
  config: ### <NFD-MASTER-CONF-START-DO-NOT-REMOVE>
    # noPublish: false
    # extraLabelNs: ["added.ns.io","added.kubernets.io"]
    # denyLabelNs: ["denied.ns.io","denied.kubernetes.io"]
    # enableTaints: false
    # informerPageSize: 200
    # labelWhiteList: "foo"
    # resyncPeriod: "2h"
    # restrictions:
    #   disableLabels: true
    #   disableTaints: true
    #   disableExtendedResources: true
    #   disableAnnotations: true
    #   allowOverwrite: false
    #   denyNodeFeatureLabels: true
    #   nodeFeatureNamespaceSelector:
    #    matchLabels:
    #      kubernetes.io/metadata.name: "node-feature-discovery"
    #    matchExpressions:
    #      - key: "kubernetes.io/metadata.name"
    #        operator: "In"
    #        values:
    #           - "node-feature-discovery"
    # klog:
    #    addDirHeader: false
    #    alsologtostderr: false
    #    logBacktraceAt:
    #    logtostderr: true
    #    skipHeaders: false
    #    stderrthreshold: 2
    #    v: 0
    #    vmodule:
    ##   NOTE: the following options are not dynamically run-time configurable
    ##         and require a nfd-master restart to take effect after being changed
    #    logDir:
    #    logFile:
    #    logFileMaxSize: 1800
    #    skipLogHeaders: false
    # leaderElection:
    #   leaseDuration: 15s
    #   # this value has to be lower than leaseDuration and greater than retryPeriod*1.2
    #   renewDeadline: 10s
    #   # this value has to be greater than 0
    #   retryPeriod: 2s
    # nfdApiParallelism: 10
  ### <NFD-MASTER-CONF-END-DO-NOT-REMOVE>

  # @schema type: integer; minimum: 1; maximum: 65535
  # -- Port on which to serve http for metrics and healthz endpoints.
  port: 8080
  # @schema type: [string, null]
  # -- Instance name. Used to separate annotation namespaces for multiple parallel deployments.
  instance:
  # @schema type: [string, null]
  # -- NFD API controller resync period. Time duration string (e.g. "5m", "1h", "2h45m").
  resyncPeriod:
  # @schema item: string
  # -- Label namespaces to deny. Labels with these prefixes will not be published to the nodes.
  denyLabelNs: []
  # @schema item: string
  # -- Additional label namespaces to publish. Labels with these prefixes are allowed even if otherwise denied by `master.denyLabelNs`.
  extraLabelNs: []
  # -- Enable node tainting.
  enableTaints: false
  # @schema type: [integer, null]; minimum: 1; maximum: 100
  # -- The maximum number of concurrent node updates.
  nfdApiParallelism:
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-master Deployment.
  deploymentAnnotations: {}
  # -- Number of the desired replicas for the nfd-master Deployment.
  replicaCount: 1
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext
  # -- [Pod SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) of the nfd-master pods.
  podSecurityContext: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext
  # -- [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) of the nfd-master container.
  securityContext:
    # @schema hidden
    allowPrivilegeEscalation: false
    # @schema hidden
    capabilities:
      drop: [ "ALL" ]
    # @schema hidden
    readOnlyRootFilesystem: true
    # @schema hidden
    runAsNonRoot: true
  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
    # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the service account
    annotations: {}
    # @schema type: [string, null]
    # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name:
  # @schema type: [integer, null]
  # -- Specifies the number of old ReplicaSets for the Deployment to retain. [revisionHistoryLimit](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit)
  revisionHistoryLimit:
  rbac:
    # -- Create [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) configuration for nfd-master.
    create: true
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
  resources:
    # @schema hidden
    # -- Resource [limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-master container.
    limits:
      memory: 4Gi
    # @schema hidden
    # -- Resource [requests](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-master container.
    requests:
      cpu: 100m
      # You may want to use the same value for `requests.memory` and `limits.memory`. The “requests” value affects scheduling to accommodate pods on nodes.
      # If there is a large difference between “requests” and “limits” and nodes experience memory pressure, the kernel may invoke
      # the OOM Killer, even if the memory does not exceed the “limits” threshold. This can cause unexpected pod evictions. Memory
      # cannot be compressed and once allocated to a pod, it can only be reclaimed by killing the pod.
      # Natan Yellin 22/09/2022 https://home.robusta.dev/blog/kubernetes-memory-limit
      memory: 128Mi
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/nodeSelector
  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) for the nfd-master pods.
  nodeSelector: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/tolerations
  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for the nfd-master pods.
  tolerations:
  - # @schema hidden
    key: "node-role.kubernetes.io/control-plane"
    # @schema hidden
    operator: "Equal"
    # @schema hidden
    value: ""
    # @schema hidden
    effect: "NoSchedule"
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetSpec
  podDisruptionBudget:
    # -- Configure PodDisruptionBudget for the nfd-master Deployment.
    enable: false
    # @schema hidden
    # -- Minimum number (or percentage) of pods that must be available after the eviction.
    minAvailable: 1
    # @schema hidden
    # -- Policy to evict unhealthy pods when a PodDisruptionBudget is defined.
    unhealthyPodEvictionPolicy: AlwaysAllow

  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-master pods.
  annotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
  # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) for the nfd-master pods.
  affinity:
    # @schema hidden
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: "node-role.kubernetes.io/control-plane"
                operator: In
                values: [""]
  # -- Startup probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-startup-probes).
  startupProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of consecutive failures for the probe before considering the pod as not ready.
    failureThreshold: 30
  # -- Liveness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-liveness-probes).
  livenessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    failureThreshold:
  # -- Readiness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-readiness-probes).
  readinessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    successThreshold:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of consecutive failures for the probe before considering the pod as not ready.
    failureThreshold: 10

#
# NFD-Worker configuration
#
worker:
  # -- Specifies whether nfd-worker should be deployed
  enable: true
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/args
  # -- Additional [command line arguments](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/worker-commandline-reference) to pass to nfd-worker.
  extraArgs: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/env
  # -- Additional environment variables to set in the nfd-worker container.
  extraEnvs: []
  # -- Run the container in the host's network namespace.
  hostNetwork: false
  # @enum: [Default, ClusterFirst, ClusterFirstWithHostNet, None]
  # -- NFD worker pod [dnsPolicy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-policy).
  dnsPolicy: ClusterFirstWithHostNet
  # -- NFD worker [configuration](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/worker-configuration-reference).
  config: ### <NFD-WORKER-CONF-START-DO-NOT-REMOVE>
    #core:
    #  labelWhiteList:
    #  noPublish: false
    #  noOwnerRefs: false
    #  sleepInterval: 60s
    #  featureSources: [all]
    #  labelSources: [all]
    #  klog:
    #    addDirHeader: false
    #    alsologtostderr: false
    #    logBacktraceAt:
    #    logtostderr: true
    #    skipHeaders: false
    #    stderrthreshold: 2
    #    v: 0
    #    vmodule:
    ##   NOTE: the following options are not dynamically run-time configurable
    ##         and require a nfd-worker restart to take effect after being changed
    #    logDir:
    #    logFile:
    #    logFileMaxSize: 1800
    #    skipLogHeaders: false
    #sources:
    #  cpu:
    #    cpuid:
    ##     NOTE: whitelist has priority over blacklist
    #      attributeBlacklist:
    #        - "AVX10"
    #        - "BMI1"
    #        - "BMI2"
    #        - "CLMUL"
    #        - "CMOV"
    #        - "CX16"
    #        - "ERMS"
    #        - "F16C"
    #        - "HTT"
    #        - "LZCNT"
    #        - "MMX"
    #        - "MMXEXT"
    #        - "NX"
    #        - "POPCNT"
    #        - "RDRAND"
    #        - "RDSEED"
    #        - "RDTSCP"
    #        - "SGX"
    #        - "SSE"
    #        - "SSE2"
    #        - "SSE3"
    #        - "SSE4"
    #        - "SSE42"
    #        - "SSSE3"
    #        - "TDX_GUEST"
    #      attributeWhitelist:
    #  kernel:
    #    kconfigFile: "/path/to/kconfig"
    #    configOpts:
    #      - "NO_HZ"
    #      - "X86"
    #      - "DMI"
    #  pci:
    #    deviceClassWhitelist:
    #      - "0200"
    #      - "03"
    #      - "12"
    #    deviceLabelFields:
    #      - "class"
    #      - "vendor"
    #      - "device"
    #      - "subsystem_vendor"
    #      - "subsystem_device"
    #  usb:
    #    deviceClassWhitelist:
    #      - "0e"
    #      - "ef"
    #      - "fe"
    #      - "ff"
    #    deviceLabelFields:
    #      - "class"
    #      - "vendor"
    #      - "device"
    #  custom:
    #    # The following feature demonstrates the capabilities of the matchFeatures
    #    - name: "my custom rule"
    #      labels:
    #        "vendor.io/my-ng-feature": "true"
    #      # matchFeatures implements a logical AND over all matcher terms in the
    #      # list (i.e. all of the terms, or per-feature matchers, must match)
    #      matchFeatures:
    #        - feature: cpu.cpuid
    #          matchExpressions:
    #            AVX512F: {op: Exists}
    #        - feature: cpu.cstate
    #          matchExpressions:
    #            enabled: {op: IsTrue}
    #        - feature: cpu.pstate
    #          matchExpressions:
    #            no_turbo: {op: IsFalse}
    #            scaling_governor: {op: In, value: ["performance"]}
    #        - feature: cpu.rdt
    #          matchExpressions:
    #            RDTL3CA: {op: Exists}
    #        - feature: cpu.sst
    #          matchExpressions:
    #            bf.enabled: {op: IsTrue}
    #        - feature: cpu.topology
    #          matchExpressions:
    #            hardware_multithreading: {op: IsFalse}
    #
    #        - feature: kernel.config
    #          matchExpressions:
    #            X86: {op: Exists}
    #            LSM: {op: InRegexp, value: ["apparmor"]}
    #        - feature: kernel.loadedmodule
    #          matchExpressions:
    #            e1000e: {op: Exists}
    #        - feature: kernel.selinux
    #          matchExpressions:
    #            enabled: {op: IsFalse}
    #        - feature: kernel.version
    #          matchExpressions:
    #            major: {op: In, value: ["5"]}
    #            minor: {op: Gt, value: ["10"]}
    #
    #        - feature: storage.block
    #          matchExpressions:
    #            rotational: {op: In, value: ["0"]}
    #            dax: {op: In, value: ["0"]}
    #
    #        - feature: network.device
    #          matchExpressions:
    #            operstate: {op: In, value: ["up"]}
    #            speed: {op: Gt, value: ["100"]}
    #
    #        - feature: memory.numa
    #          matchExpressions:
    #            node_count: {op: Gt, value: ["2"]}
    #        - feature: memory.nv
    #          matchExpressions:
    #            devtype: {op: In, value: ["nd_dax"]}
    #            mode: {op: In, value: ["memory"]}
    #
    #        - feature: system.osrelease
    #          matchExpressions:
    #            ID: {op: In, value: ["fedora", "centos"]}
    #        - feature: system.name
    #          matchExpressions:
    #            nodename: {op: InRegexp, value: ["^worker-X"]}
    #
    #        - feature: local.label
    #          matchExpressions:
    #            custom-feature-knob: {op: Gt, value: ["100"]}
    #
    #    # The following feature demonstrates the capabilities of the matchAny
    #    - name: "my matchAny rule"
    #      labels:
    #        "vendor.io/my-ng-feature-2": "my-value"
    #      # matchAny implements a logical IF over all elements (sub-matchers) in
    #      # the list (i.e. at least one feature matcher must match)
    #      matchAny:
    #        - matchFeatures:
    #            - feature: kernel.loadedmodule
    #              matchExpressions:
    #                driver-module-X: {op: Exists}
    #            - feature: pci.device
    #              matchExpressions:
    #                vendor: {op: In, value: ["8086"]}
    #                class: {op: In, value: ["0200"]}
    #        - matchFeatures:
    #            - feature: kernel.loadedmodule
    #              matchExpressions:
    #                driver-module-Y: {op: Exists}
    #            - feature: usb.device
    #              matchExpressions:
    #                vendor: {op: In, value: ["8086"]}
    #                class: {op: In, value: ["02"]}
    #
    #    - name: "avx wildcard rule"
    #      labels:
    #        "my-avx-feature": "true"
    #      matchFeatures:
    #        - feature: cpu.cpuid
    #          matchName: {op: InRegexp, value: ["^AVX512"]}
    #
    #    # The following features demonstreate label templating capabilities
    #    - name: "my template rule"
    #      labelsTemplate: |
    #        {{ range .system.osrelease }}vendor.io/my-system-feature.{{ .Name }}={{ .Value }}
    #        {{ end }}
    #      matchFeatures:
    #        - feature: system.osrelease
    #          matchExpressions:
    #            ID: {op: InRegexp, value: ["^open.*"]}
    #            VERSION_ID.major: {op: In, value: ["13", "15"]}
    #
    #    - name: "my template rule 2"
    #      labelsTemplate: |
    #        {{ range .pci.device }}vendor.io/my-pci-device.{{ .class }}-{{ .device }}=with-cpuid
    #        {{ end }}
    #      matchFeatures:
    #        - feature: pci.device
    #          matchExpressions:
    #            class: {op: InRegexp, value: ["^06"]}
    #            vendor: ["8086"]
    #        - feature: cpu.cpuid
    #          matchExpressions:
    #            AVX: {op: Exists}
    #
    #    # The following examples demonstrate vars field and back-referencing
    #    # previous labels and vars
    #    - name: "my dummy kernel rule"
    #      labels:
    #        "vendor.io/my.kernel.feature": "true"
    #      matchFeatures:
    #        - feature: kernel.version
    #          matchExpressions:
    #            major: {op: Gt, value: ["2"]}
    #
    #    - name: "my dummy rule with no labels"
    #      vars:
    #        "my.dummy.var": "1"
    #      matchFeatures:
    #        - feature: cpu.cpuid
    #          matchExpressions: {}
    #
    #    - name: "my rule using backrefs"
    #      labels:
    #        "vendor.io/my.backref.feature": "true"
    #      matchFeatures:
    #        - feature: rule.matched
    #          matchExpressions:
    #            vendor.io/my.kernel.feature: {op: IsTrue}
    #            my.dummy.var: {op: Gt, value: ["0"]}
    #
    #    - name: "kconfig template rule"
    #      labelsTemplate: |
    #        {{ range .kernel.config }}kconfig-{{ .Name }}={{ .Value }}
    #        {{ end }}
    #      matchFeatures:
    #        - feature: kernel.config
    #          matchName: {op: In, value: ["SWAP", "X86", "ARM"]}
### <NFD-WORKER-CONF-END-DO-NOT-REMOVE>

  # @schema type: integer; minimum: 1; maximum: 65535
  # -- Port on which to serve http for metrics and healthz endpoints.
  port: 8080
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-worker DaemonSet.
  daemonsetAnnotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext
  # -- [Pod SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) of the nfd-worker pods.
  podSecurityContext: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext
  # -- [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) of the nfd-worker container.
  securityContext:
    # @schema hidden
    allowPrivilegeEscalation: false
    # @schema hidden
    capabilities:
      drop: [ "ALL" ]
    # @schema hidden
    readOnlyRootFilesystem: true
    # @schema hidden
    runAsNonRoot: true

  # -- Liveness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-liveness-probes).
  livenessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds: 10
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    failureThreshold:
  # -- Readiness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-readiness-probes).
  readinessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds: 5
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    successThreshold:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of consecutive failures for the probe before considering the pod as not ready.
    failureThreshold: 10

  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
    # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the service account
    annotations: {}
    # @schema type: [string, null]
    # -- Name of the service account to use. If not set and create is true, a name is generated using the fullname template
    name:
  # @schema type: [integer, null]
  # -- Specifies the number of old history for the DaemonSet to retain to allow rollback.
  revisionHistoryLimit:
  rbac:
    # -- Create [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) configuration for nfd-worker.
    create: true

  # Allow users to mount the hostPath /usr/src, useful for RHCOS on s390x
  # Does not work on systems without /usr/src AND a read-only /usr, such as Talos
  # -- Mount host path /user/src inside the container. Does not work on systems without /usr/src AND a read-only /usr.
  mountUsrSrc: false
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
  resources:
    # @schema hidden
    # -- Resource [limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-worker container.
    limits:
      memory: 512Mi
    # @schema hidden
    # -- Resource [requests](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-worker container.
    requests:
      cpu: 5m
      memory: 64Mi
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/nodeSelector
  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) for the nfd-worker pods.
  nodeSelector: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/tolerations
  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for the nfd-worker pods.
  tolerations: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-worker pods.
  annotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
  # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) for the nfd-worker pods.
  affinity: {}
  # @schema type: [string, null]
  # -- The name of the PriorityClass to be used for the nfd-worker pods.
  priorityClassName:
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy
  # -- Update strategy for the nfd-worker DaemonSet. [More info](https://kubernetes.io/docs/tasks/manage-daemon/update-daemon-set)
  updateStrategy: {}

#
# NFD-Topology-Updater configuration
#
topologyUpdater:
  # -- Configuration for the topology updater. See the [configuration reference](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/topology-updater-configuration-reference) for details.
  config: ### <NFD-TOPOLOGY-UPDATER-CONF-START-DO-NOT-REMOVE>
    ## key = node name, value = list of resources to be excluded.
    ## use * to exclude from all nodes.
    ## an example for how the exclude list should looks like
    #excludeList:
    #  node1: [cpu]
    #  node2: [memory, example/deviceA]
    #  *: [hugepages-2Mi]
### <NFD-TOPOLOGY-UPDATER-CONF-END-DO-NOT-REMOVE>

  # -- Specifies whether nfd-topology-updater should be deployed.
  enable: false
  # -- Create CustomResourceDefinitions for the TopologyUpdater.
  createCRDs: false
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/args
  # -- Additional [command line arguments](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/topology-updater-commandline-reference) to pass to nfd-topology-updater.
  extraArgs: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/env
  # -- Additional environment variables to set in the nfd-topology-updater container.
  extraEnvs: []
  # -- Run the container in the host's network namespace.
  hostNetwork: false
  # @enum: [Default, ClusterFirst, ClusterFirstWithHostNet, None]
  # -- NFD topology updater pod [dnsPolicy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-policy).
  dnsPolicy: ClusterFirstWithHostNet
  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
    # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the service account.
    annotations: {}
    # @schema type: [string, null]
    # -- Name or the service account to use. If not set and create is true, a name is generated using the fullname template.
    name:

  # @schema type: [integer, null]
  # -- Specifies the number of old history for the DaemonSet to retain to allow rollback.
  revisionHistoryLimit:
  rbac:
    # -- Create [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) configuration for nfd-topology-updater.
    create: true
  # @schema type: integer; minimum: 1; maximum: 65535
  # -- Port on which to serve http for metrics and healthz endpoints.
  port: 8080
  # @schema type: [string, null]
  # -- Host path for the kubelet config file.
  kubeletConfigPath:
  # @schema type: [string, null]
  # -- Host path for the kubelet socket for podresources endpoint.
  kubeletPodResourcesSockPath:
  # -- Time to sleep between CR updates. Non-positive value implies no CR update.
  updateInterval: 60s
  # -- Namespace to watch pods, `*` for all namespaces.
  watchNamespace: "*"
  # -- The kubelet state directory path for watching state and checkpoint files. Empty value disables kubelet state tracking.
  kubeletStateDir: /var/lib/kubelet
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext
  # -- [Pod SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) of the nfd-topology-updater pods.
  podSecurityContext: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.SecurityContext
  # -- [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) of the nfd-topology-updater container.
  securityContext:
    # @schema hidden
    allowPrivilegeEscalation: false
    # @schema hidden
    capabilities:
      drop: [ "ALL" ]
    # @schema hidden
    readOnlyRootFilesystem: true
    # @schema hidden
    runAsUser: 0

  # -- Liveness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-liveness-probes).
  livenessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds: 10
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    failureThreshold:
  # -- Readiness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-readiness-probes).
  readinessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds: 5
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    successThreshold:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of consecutive failures for the probe before considering the pod as not ready.
    failureThreshold: 10

  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements
  resources:
    # @schema hidden
    # -- Resource [limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-topology-updater container.
    limits:
      memory: 60Mi
    # @schema hidden
    # -- Resource [requests](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-topology-updater container.
    requests:
      cpu: 50m
      memory: 40Mi
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/nodeSelector
  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) for the nfd-topology-updater pods.
  nodeSelector: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/tolerations
  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for the nfd-topology-updater pods.
  tolerations: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-topology-updater pods.
  annotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-topology-updater DaemonSet.
  daemonsetAnnotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
  # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) for the nfd-topology-updater pods.
  affinity: {}
  # -- Enables compute and report of pod fingerprint in NRT objects.
  podSetFingerprint: true

#
# NFD-GC configuration
#
gc:
  # -- Specifies whether nfd-gc should be deployed.
  enable: true
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/args
  # -- Additional [command line arguments](https://kubernetes-sigs.github.io/node-feature-discovery/master/reference/gc-commandline-reference) to pass to nfd-gc.
  extraArgs: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/env
  # -- Additional environment variables to set in the nfd-gc container.
  extraEnvs: []
  # -- Run the container in the host's network namespace.
  hostNetwork: false
  # -- The number of desired replicas for the nfd-gc Deployment.
  replicaCount: 1
  # @enum: [Default, ClusterFirst, ClusterFirstWithHostNet, None]
  # -- NFD gc pod [dnsPolicy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-policy).
  dnsPolicy: ClusterFirstWithHostNet
  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
    # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the service account.
    annotations: {}
    # @schema type: [string, null]
    # -- Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
    name:
  rbac:
    # -- Create [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) configuration for nfd-gc.
    create: true
  # -- Time between periodic garbage collector runs.
  interval: 1h
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext
  # -- [Pod SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) of the nfd-gc pods.
  podSecurityContext: {}

  # -- Liveness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-liveness-probes).
  livenessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds: 10
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    failureThreshold:
  # -- Readiness probe configuration. [More information](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-readiness-probes).
  readinessProbe:
    # @schema type: [integer, null]
    # -- The number of seconds after the container has started before probe is initiated.
    initialDelaySeconds: 5
    # @schema type: [integer, null]; minimum: 1
    # -- The number of seconds after which the probe times out.
    timeoutSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- How often (in seconds) to perform the probe.
    periodSeconds:
    # @schema type: [integer, null]; minimum: 1
    # -- Minimum consecutive successes for the probe before considering the pod as ready.
    successThreshold:
    # @schema type: [integer, null]; minimum: 1
    # -- The number of consecutive failures for the probe before considering the pod as not ready.
    failureThreshold:

  resources:
    # @schema hidden
    # -- Resource [limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-gc container.
    limits:
      memory: 1Gi
    # @schema hidden
    # -- Resource [requests](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits) for the nfd-gc container.
    requests:
      cpu: 10m
      memory: 128Mi
  # @schema type: integer; minimum: 1; maximum: 65535
  # -- Port on which to serve http for metrics and healthz endpoints.
  port: 8080
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/nodeSelector
  # -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) for the nfd-gc pods.
  nodeSelector: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/tolerations
  # -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for the nfd-gc pods.
  tolerations: []
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-gc pods.
  annotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations
  # -- [Annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations) to add to the nfd-gc  Deployment.
  deploymentAnnotations: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.core.v1.Affinity
  # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) for the nfd-gc pods.
  affinity: {}
  # @schema $ref: $k8s/_definitions.json#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetSpec
  podDisruptionBudget:
    # -- Configure PodDisruptionBudget for the nfd-master Deployment.
    enable: false
    # @schema hidden
    # -- Minimum number (or percentage) of pods that must be available after the eviction.
    minAvailable: 1
    # @schema hidden
    # -- Policy to evict unhealthy pods when a PodDisruptionBudget is defined.
    unhealthyPodEvictionPolicy: AlwaysAllow
  # @schema type: [integer, null]
  # -- Specifies the number of old history for the Deployment to retain to allow rollback.
  revisionHistoryLimit:

#
# Prometheus configuration
#
prometheus:
  # -- Create PodMonitor object for enabling metrics collection by Prometheus Operator.
  enable: false
  # -- Interval at which metrics are scraped.
  scrapeInterval: 10s
  # -- Labels to add to the PodMonitor object.
  labels: {}
